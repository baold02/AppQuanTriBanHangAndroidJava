// Generated by view binder compiler. Do not edit!
package com.example.appbanhangandroidjava.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appbanhangandroidjava.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnPostProduct;

  @NonNull
  public final EditText edtPostDesProduct;

  @NonNull
  public final EditText edtPostImgProduct;

  @NonNull
  public final EditText edtPostNameProduct;

  @NonNull
  public final EditText edtPostPriceProduct;

  @NonNull
  public final ImageView imgImage;

  @NonNull
  public final Spinner spnLoai;

  private ActivityAddProductBinding(@NonNull LinearLayout rootView, @NonNull Button btnPostProduct,
      @NonNull EditText edtPostDesProduct, @NonNull EditText edtPostImgProduct,
      @NonNull EditText edtPostNameProduct, @NonNull EditText edtPostPriceProduct,
      @NonNull ImageView imgImage, @NonNull Spinner spnLoai) {
    this.rootView = rootView;
    this.btnPostProduct = btnPostProduct;
    this.edtPostDesProduct = edtPostDesProduct;
    this.edtPostImgProduct = edtPostImgProduct;
    this.edtPostNameProduct = edtPostNameProduct;
    this.edtPostPriceProduct = edtPostPriceProduct;
    this.imgImage = imgImage;
    this.spnLoai = spnLoai;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnPostProduct;
      Button btnPostProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnPostProduct == null) {
        break missingId;
      }

      id = R.id.edtPostDesProduct;
      EditText edtPostDesProduct = ViewBindings.findChildViewById(rootView, id);
      if (edtPostDesProduct == null) {
        break missingId;
      }

      id = R.id.edtPostImgProduct;
      EditText edtPostImgProduct = ViewBindings.findChildViewById(rootView, id);
      if (edtPostImgProduct == null) {
        break missingId;
      }

      id = R.id.edtPostNameProduct;
      EditText edtPostNameProduct = ViewBindings.findChildViewById(rootView, id);
      if (edtPostNameProduct == null) {
        break missingId;
      }

      id = R.id.edtPostPriceProduct;
      EditText edtPostPriceProduct = ViewBindings.findChildViewById(rootView, id);
      if (edtPostPriceProduct == null) {
        break missingId;
      }

      id = R.id.imgImage;
      ImageView imgImage = ViewBindings.findChildViewById(rootView, id);
      if (imgImage == null) {
        break missingId;
      }

      id = R.id.spn_loai;
      Spinner spnLoai = ViewBindings.findChildViewById(rootView, id);
      if (spnLoai == null) {
        break missingId;
      }

      return new ActivityAddProductBinding((LinearLayout) rootView, btnPostProduct,
          edtPostDesProduct, edtPostImgProduct, edtPostNameProduct, edtPostPriceProduct, imgImage,
          spnLoai);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
